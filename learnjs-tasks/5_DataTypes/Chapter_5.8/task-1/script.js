// запускать из терминала с помощью node
"use strict";

// Хранение отметок "не прочитано"
// Есть массив сообщений:

let messages = [
  { text: "Hello", from: "John" },
  { text: "How goes?", from: "John" },
  { text: "See you soon", from: "Alice" },
];
// У вас есть к ним доступ, но управление этим массивом происходит где-то ещё. Добавляются новые сообщения и удаляются старые, и вы не знаете в какой момент это может произойти.
// Имея такую вводную информацию, решите, какую структуру данных вы могли бы использовать для ответа на вопрос «было ли сообщение прочитано?». Структура должна быть подходящей, чтобы можно было однозначно сказать, было ли прочитано это сообщение для каждого объекта сообщения.

let readedMessages = new WeakSet();

readedMessages.add(messages[1]); // Добавляем сообщение в контейнер (теперь оно прочитано)

console.log(readedMessages.has(messages[1])); // проверяем добавилось ли сообщение в контейнер

messages.forEach((msg, i) => {
  // выводим индексы сообщений которе прочитаны
  if (readedMessages.has(msg)) {
    console.log(`Message ${i} was readed`);
  } else console.log(`Message ${i} wasn't readed`);
});

messages.splice(0, 1); // удаляем сообщение из массива

console.log(readedMessages.has(messages[1])); // проверяем удалилось ли сообщение из контейнера
